### Controle Service API Tests
### Base URL: http://localhost:8080

### 1. Create a new thermostat configuration
POST http://localhost:8080/config/
Content-Type: application/json

{
    "id": 1,
    "local": "Sala de Estar",
    "tempDesejada": 22,
    "tempAtual": 20
}

###

### 2. Create another thermostat configuration
POST http://localhost:8080/config/
Content-Type: application/json

{
    "id": 2,
    "local": "Quarto",
    "tempDesejada": 24,
    "tempAtual": 23
}

###

### 3. Get all thermostat configurations
GET http://localhost:8080/config/

###

### 4. Get specific thermostat by ID
GET http://localhost:8080/config/1

###

### 5. Get non-existent thermostat (should return 404)
GET http://localhost:8080/config/999

###

### 6. Get desired temperature for specific thermostat
GET http://localhost:8080/config/tempDesejada/1

###

### 7. Update thermostat configuration (PATCH)
PATCH http://localhost:8080/config/1
Content-Type: application/json

{
    "local": "Quarto",
    "tempDesejada": 25,
    "tempAtual": 22
}

###

### 8. Update only current temperature
PATCH http://localhost:8080/config/tempAtual/1
Content-Type: application/json

{
    "tempAtual": 21
}

###

### 9. Update only desired temperature
PATCH http://localhost:8080/config/tempDesejada/1
Content-Type: application/json

{
    "tempDesejada": 23
}

###

### 10. Update thermostat with partial data (only local)
PATCH http://localhost:8080/config/2
Content-Type: application/json

{
    "local": "Quarto Principal"
}

###

### 11. Try to update non-existent thermostat (should return 404)
PATCH http://localhost:8080/config/999
Content-Type: application/json

{
    "tempDesejada": 20
}

###

### 12. Delete thermostat configuration
DELETE http://localhost:8080/config/2

###

### 13. Try to delete non-existent thermostat (should return 404)
DELETE http://localhost:8080/config/999

###

### 14. Get all configurations after deletion
GET http://localhost:8080/config/

###

### 15. Test with invalid JSON (should return error)
POST http://localhost:8080/config/
Content-Type: application/json

{
    "id": 3,
    "local": "Cozinha",
    "tempDesejada": "invalid",
    "tempAtual": 18
}

###

### 16. Test missing required fields (should return error)
POST http://localhost:8080/config/
Content-Type: application/json

{
    "id": 4,
    "local": "Banheiro"
}

###

### 17. Test duplicate ID (should return error)
POST http://localhost:8080/config/
Content-Type: application/json

{
    "id": 1,
    "local": "Duplicado",
    "tempDesejada": 20,
    "tempAtual": 19
}

###

### 18. Test edge case - very high temperature
POST http://localhost:8080/config/
Content-Type: application/json

{
    "id": 5,
    "local": "Sauna",
    "tempDesejada": 80,
    "tempAtual": 75
}

###

### 19. Test edge case - very low temperature
POST http://localhost:8080/config/
Content-Type: application/json

{
    "id": 6,
    "local": "Freezer",
    "tempDesejada": -10,
    "tempAtual": -5
}

###

### 20. Test with special characters in local name
POST http://localhost:8080/config/
Content-Type: application/json

{
    "id": 7,
    "local": "Sala com Acentos: áéíóú",
    "tempDesejada": 22,
    "tempAtual": 21
}

###

### 21. Test with very long local name
POST http://localhost:8080/config/
Content-Type: application/json

{
    "id": 8,
    "local": "Este é um nome de local muito longo para testar como o sistema se comporta com strings extensas",
    "tempDesejada": 22,
    "tempAtual": 21
}

###

### 22. Test with zero values
POST http://localhost:8080/config/
Content-Type: application/json

{
    "id": 9,
    "local": "Teste Zero",
    "tempDesejada": 0,
    "tempAtual": 0
}

###

### 23. Test with negative ID (edge case)
POST http://localhost:8080/config/
Content-Type: application/json

{
    "id": -1,
    "local": "ID Negativo",
    "tempDesejada": 20,
    "tempAtual": 19
}

###

### 24. Test with very large ID
POST http://localhost:8080/config/
Content-Type: application/json

{
    "id": 999999999,
    "local": "ID Grande",
    "tempDesejada": 22,
    "tempAtual": 21
}

###

### 25. Final check - get all configurations
GET http://localhost:8080/config/

### 